name: Release

on:
  workflow_dispatch:
    inputs:
      releaseModule:
        required: true
        type: choice
        description: Module
        options:
          - evaluation-core
          - evaluation-serialization
          - evaluation-js
      version:
        required: true
        type: string
        description: Release Vesrion (no 'v' prefix)
      dryRun:
        required: true
        type: boolean
        description: Dry Run
        default: true

jobs:
  authorize:
    name: Authorize
    runs-on: ubuntu-18.04
    steps:
      - name: ${{ github.actor }} permission check to do a release
        uses: octokit/request-action@v2.0.0
        with:
          route: GET /repos/:repository/collaborators/${{ github.actor }}
          repository: ${{ github.repository }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  release:
    name: Release
    runs-on: ubuntu-18.04
    needs: [authorize]
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: 11
          distribution: zulu
          cache: gradle

      - name: Validate Version
        if: startsWith( '${{ github.event.inputs.version }}', 'v')
        uses: actions/github-script@v3
        with:
          script: |
            core.setFailed('Version must not start with \'v\'')

#      - name: Lint
#        run: ./gradlew ktlintCheck
#
#      - name: Build
#        run: ./gradlew assemble
#
#      - name: Test
#        run: ./gradlew allTests --info

      - name: Set Version
        uses: jacobtomlinson/gha-find-replace@v2
        with:
          find: 'version = ".*"'
          replace: 'version = "${{ github.event.inputs.version }}"'
          include: '${{ github.event.inputs.releaseModule }}/**'
          regex: true

      - name: DEBUG
        run: |
          cd ${{ github.event.inputs.releaseModule }}
          cat build.gradle.kts

#      - name: Semantic Release --dry-run
#        if: ${{ github.event.inputs.dryRun == 'true'}}
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#          GIT_AUTHOR_NAME: amplitude-sdk-bot
#          GIT_AUTHOR_EMAIL: amplitude-sdk-bot@users.noreply.github.com
#          GIT_COMMITTER_NAME: amplitude-sdk-bot
#          GIT_COMMITTER_EMAIL: amplitude-sdk-bot@users.noreply.github.com
#        run: |
#          cd ${{ github.event.inputs.releaseModule }}
#          npx \
#          -p lodash \
#          -p semantic-release@17 \
#          -p @semantic-release/git@9 \
#          -p @google/semantic-release-replace-plugin@1 \
#          -p @semantic-release/exec@5 \
#          semantic-release --dry-run
#
#      - name: Semantic Release
#        if: ${{ github.event.inputs.dryRun == 'false'}}
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#          GIT_AUTHOR_NAME: amplitude-sdk-bot
#          GIT_AUTHOR_EMAIL: amplitude-sdk-bot@users.noreply.github.com
#          GIT_COMMITTER_NAME: amplitude-sdk-bot
#          GIT_COMMITTER_EMAIL: amplitude-sdk-bot@users.noreply.github.com
#        run: |
#          cd ${{ github.event.inputs.releaseModule }}
#          npx \
#          -p lodash \
#          -p semantic-release@17 \
#          -p @semantic-release/git@9 \
#          -p @google/semantic-release-replace-plugin@1 \
#          -p @semantic-release/exec@5 \
#          semantic-release
